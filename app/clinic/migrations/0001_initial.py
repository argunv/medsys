# Generated by Django 5.0.7 on 2024-08-09 00:50

import clinic.config.levels
import clinic.validators.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        max_length=30,
                        validators=[clinic.validators.models.validate_first_name],
                        verbose_name="first name",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        max_length=30,
                        validators=[clinic.validators.models.validate_last_name],
                        verbose_name="last name",
                    ),
                ),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, region=None, unique=True
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "user_level",
                    models.SmallIntegerField(
                        choices=clinic.config.levels.UserLevel.choices, default=0
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="customuser_set",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="customuser_set",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
            },
        ),
        migrations.CreateModel(
            name="DoctorSpecialization",
            fields=[
                (
                    "doctor",
                    models.OneToOneField(
                        limit_choices_to={"is_active": True, "user_level": 1},
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="doctor_specializations",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "specialization",
                    models.CharField(
                        max_length=30,
                        validators=[clinic.validators.models.validate_specialty],
                    ),
                ),
            ],
            options={
                "verbose_name": "Doctor Specialization",
                "verbose_name_plural": "Doctor Specializations",
            },
        ),
        migrations.CreateModel(
            name="Diagnosis",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        limit_choices_to={"is_active": True, "user_level": 1},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor_diagnoses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        limit_choices_to={"is_active": True, "user_level": 0},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="patient_diagnoses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Diagnosis",
                "verbose_name_plural": "Diagnoses",
                "permissions": [
                    ("can_view_diagnosis", "Can view diagnosis"),
                    ("can_edit_diagnosis", "Can edit diagnosis"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("start", models.TimeField()),
                ("end", models.TimeField()),
                (
                    "day_of_week",
                    models.SmallIntegerField(
                        choices=[
                            (0, "Monday"),
                            (1, "Tuesday"),
                            (2, "Wednesday"),
                            (3, "Thursday"),
                            (4, "Friday"),
                            (5, "Saturday"),
                            (6, "Sunday"),
                        ]
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        limit_choices_to={"is_active": True, "user_level": 1},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor_schedule",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Schedule",
                "verbose_name_plural": "Schedules",
                "permissions": [
                    ("can_view_schedule", "Can view schedule"),
                    ("can_edit_schedule", "Can edit schedule"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Visit",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField()),
                ("start", models.TimeField()),
                ("end", models.TimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("visited", "Visited"),
                            ("missed", "Missed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="scheduled",
                        max_length=30,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        limit_choices_to={"is_active": True, "user_level": 1},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor_visits",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        limit_choices_to={"is_active": True, "user_level": 0},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="patient_visits",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Visit",
                "verbose_name_plural": "Visits",
                "permissions": [
                    ("can_view_visit", "Can view visit"),
                    ("can_edit_visit", "Can edit visit"),
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="doctorspecialization",
            constraint=models.UniqueConstraint(
                fields=("doctor", "specialization"), name="unique_doctor_specialization"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="doctorspecialization",
            unique_together={("doctor", "specialization")},
        ),
    ]
